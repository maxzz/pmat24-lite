import { FieldTyp, ValueAs, type ValueLife } from "pm-manifest";

export function createEmptyValueLife({ fType }: { fType: FieldTyp; }): ValueLife {
    return {
        fType,
        valueAs: ValueAs.askReuse,
        value: '',
        isRef: false,
        isNon: false,
    };
}

// Think of the following. generated by supermaven
/*
export function createEmptyField(): Meta.Field {
    return {
        mani: createEmptyMani(),
        ftyp: FieldTyp.edit,
        life: createEmptyValueLife(),
        path: {},
        pidx: 0,
        ridx: 0,
        uuid: uuid.asRelativeNumber(),
    };
}

export function createEmptyMani(): Mani.Field {
    return {
        type: FieldTyp.edit,
        password: false,
        choosevalue: '',
        policy: {
            policy: Policy.ask,
            policy2: Policy2.ask,
            options: '',
        },
    };
}

export function createEmptyMeta(): Meta.Field {
    return {
        mani: createEmptyMani(),
        ftyp: FieldTyp.edit,
        life: createEmptyValueLife(),
        path: {},
        pidx: 0,
        ridx: 0,
        uuid: uuid.asRelativeNumber(),
    };
}

export function createEmptyFceItem(): FceItem {
    return {
        fieldValue: createEmptyField(),
        beforeEdit: createEmptyField(),
        fceMeta: {
            index: 0,
            uuid: uuid.asRelativeNumber(),
            mru: uuid.asRelativeNumber(),
        },
        editor: {
            selectedView: false,
            selectedDlg: false,
        },
    };
}
*/
